{"ast":null,"code":"/**\n *Returns the Harmonic mean similarity between vectors a and b\n * @link [Harmonic Mean Similarity algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function harmonicMean(a, b) {\n  let ans = 0;\n  for (let i = 0; i < a.length; i++) {\n    ans += a[i] * b[i] / (a[i] + b[i]);\n  }\n  return 2 * ans;\n}","map":{"version":3,"names":["harmonicMean","a","b","ans","i","length"],"sources":["/home/nikhil/legalbot/legalbot/node_modules/ml-distance/src/distances/harmonicMean.ts"],"sourcesContent":["import { NumberArray } from 'cheminfo-types';\n/**\n *Returns the Harmonic mean similarity between vectors a and b\n * @link [Harmonic Mean Similarity algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function harmonicMean(a: NumberArray, b: NumberArray): number {\n  let ans = 0;\n  for (let i = 0; i < a.length; i++) {\n    ans += (a[i] * b[i]) / (a[i] + b[i]);\n  }\n  return 2 * ans;\n}\n"],"mappings":"AACA;;;;;;;AAOA,eAAc,SAAUA,YAAYA,CAACC,CAAc,EAAEC,CAAc;EACjE,IAAIC,GAAG,GAAG,CAAC;EACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,CAAC,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACjCD,GAAG,IAAKF,CAAC,CAACG,CAAC,CAAC,GAAGF,CAAC,CAACE,CAAC,CAAC,IAAKH,CAAC,CAACG,CAAC,CAAC,GAAGF,CAAC,CAACE,CAAC,CAAC,CAAC;;EAEtC,OAAO,CAAC,GAAGD,GAAG;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}