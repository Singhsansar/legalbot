{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.queryParamsStringify = void 0;\n// Everything in this file is lifted from the generated openapi runtime.\n// I need to create a small modification of the generated queryParamStringify\n// function in order to fix an issue with array params.\n//\n// See https://github.com/pinecone-io/pinecone-ts-client/pull/74\nfunction queryParamsStringify(params, prefix) {\n  if (prefix === void 0) {\n    prefix = '';\n  }\n  return Object.keys(params).map(function (key) {\n    return querystringSingleKey(key, params[key], prefix);\n  }).filter(function (part) {\n    return part.length > 0;\n  }).join('&');\n}\nexports.queryParamsStringify = queryParamsStringify;\nfunction querystringSingleKey(key, value, keyPrefix) {\n  if (keyPrefix === void 0) {\n    keyPrefix = '';\n  }\n  var fullKey = keyPrefix + (keyPrefix.length ? \"[\".concat(key, \"]\") : key);\n  // This is a one line change from the default querystring implementation. Checking\n  // with `Array.isArray` instead of `value instanceof Array` allows us to get the\n  // the correct behavior when stringifying array params.\n  if (Array.isArray(value)) {\n    var multiValue = value.map(function (singleValue) {\n      return encodeURIComponent(String(singleValue));\n    }).join(\"&\".concat(encodeURIComponent(fullKey), \"=\"));\n    return \"\".concat(encodeURIComponent(fullKey), \"=\").concat(multiValue);\n  }\n  if (value instanceof Set) {\n    var valueAsArray = Array.from(value);\n    return querystringSingleKey(key, valueAsArray, keyPrefix);\n  }\n  if (value instanceof Date) {\n    return \"\".concat(encodeURIComponent(fullKey), \"=\").concat(encodeURIComponent(value.toISOString()));\n  }\n  if (value instanceof Object) {\n    return queryParamsStringify(value, fullKey);\n  }\n  return \"\".concat(encodeURIComponent(fullKey), \"=\").concat(encodeURIComponent(String(value)));\n}","map":{"version":3,"names":["queryParamsStringify","params","prefix","Object","keys","map","key","querystringSingleKey","filter","part","length","join","exports","value","keyPrefix","fullKey","concat","Array","isArray","multiValue","singleValue","encodeURIComponent","String","Set","valueAsArray","from","Date","toISOString"],"sources":["../../src/utils/queryParamsStringify.ts"],"sourcesContent":[null],"mappings":";;;;;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAgBA,oBAAoBA,CAClCC,MAAiB,EACjBC,MAAmB;EAAnB,IAAAA,MAAA;IAAAA,MAAA,KAAmB;EAAA;EAEnB,OAAOC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CACvBI,GAAG,CAAC,UAACC,GAAG;IAAK,OAAAC,oBAAoB,CAACD,GAAG,EAAEL,MAAM,CAACK,GAAG,CAAC,EAAEJ,MAAM,CAAC;EAA9C,CAA8C,CAAC,CAC5DM,MAAM,CAAC,UAACC,IAAI;IAAK,OAAAA,IAAI,CAACC,MAAM,GAAG,CAAC;EAAf,CAAe,CAAC,CACjCC,IAAI,CAAC,GAAG,CAAC;AACd;AARAC,OAAA,CAAAZ,oBAAA,GAAAA,oBAAA;AAUA,SAASO,oBAAoBA,CAC3BD,GAAW,EACXO,KAQa,EACbC,SAAsB;EAAtB,IAAAA,SAAA;IAAAA,SAAA,KAAsB;EAAA;EAEtB,IAAMC,OAAO,GAAGD,SAAS,IAAIA,SAAS,CAACJ,MAAM,GAAG,IAAAM,MAAA,CAAIV,GAAG,MAAG,GAAGA,GAAG,CAAC;EAEjE;EACA;EACA;EACA,IAAIW,KAAK,CAACC,OAAO,CAACL,KAAK,CAAC,EAAE;IACxB,IAAMM,UAAU,GAAGN,KAAK,CACrBR,GAAG,CAAC,UAACe,WAAW;MAAK,OAAAC,kBAAkB,CAACC,MAAM,CAACF,WAAW,CAAC,CAAC;IAAvC,CAAuC,CAAC,CAC7DT,IAAI,CAAC,IAAAK,MAAA,CAAIK,kBAAkB,CAACN,OAAO,CAAC,MAAG,CAAC;IAC3C,OAAO,GAAAC,MAAA,CAAGK,kBAAkB,CAACN,OAAO,CAAC,OAAAC,MAAA,CAAIG,UAAU,CAAE;;EAEvD,IAAIN,KAAK,YAAYU,GAAG,EAAE;IACxB,IAAMC,YAAY,GAAGP,KAAK,CAACQ,IAAI,CAACZ,KAAK,CAAC;IACtC,OAAON,oBAAoB,CAACD,GAAG,EAAEkB,YAAY,EAAEV,SAAS,CAAC;;EAE3D,IAAID,KAAK,YAAYa,IAAI,EAAE;IACzB,OAAO,GAAAV,MAAA,CAAGK,kBAAkB,CAACN,OAAO,CAAC,OAAAC,MAAA,CAAIK,kBAAkB,CACzDR,KAAK,CAACc,WAAW,EAAE,CACpB,CAAE;;EAEL,IAAId,KAAK,YAAYV,MAAM,EAAE;IAC3B,OAAOH,oBAAoB,CAACa,KAAkB,EAAEE,OAAO,CAAC;;EAE1D,OAAO,GAAAC,MAAA,CAAGK,kBAAkB,CAACN,OAAO,CAAC,OAAAC,MAAA,CAAIK,kBAAkB,CAACC,MAAM,CAACT,KAAK,CAAC,CAAC,CAAE;AAC9E","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}