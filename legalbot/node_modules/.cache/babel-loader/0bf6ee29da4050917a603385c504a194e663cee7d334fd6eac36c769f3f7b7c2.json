{"ast":null,"code":"import mean from 'ml-array-mean';\nimport cosine from './cosine';\nexport default function pearson(a, b) {\n  let avgA = mean(a);\n  let avgB = mean(b);\n  let newA = new Array(a.length);\n  let newB = new Array(b.length);\n  for (let i = 0; i < newA.length; i++) {\n    newA[i] = a[i] - avgA;\n    newB[i] = b[i] - avgB;\n  }\n  return cosine(newA, newB);\n}","map":{"version":3,"names":["mean","cosine","pearson","a","b","avgA","avgB","newA","Array","length","newB","i"],"sources":["/home/nikhil/legalbot/legalbot/node_modules/ml-distance/src/similarities/pearson.ts"],"sourcesContent":["import { NumberArray } from 'cheminfo-types';\nimport mean from 'ml-array-mean';\n\nimport cosine from './cosine';\n\nexport default function pearson(a: NumberArray, b: NumberArray): number {\n  let avgA = mean(a);\n  let avgB = mean(b);\n\n  let newA = new Array(a.length);\n  let newB = new Array(b.length);\n  for (let i = 0; i < newA.length; i++) {\n    newA[i] = a[i] - avgA;\n    newB[i] = b[i] - avgB;\n  }\n\n  return cosine(newA, newB);\n}\n"],"mappings":"AACA,OAAOA,IAAI,MAAM,eAAe;AAEhC,OAAOC,MAAM,MAAM,UAAU;AAE7B,eAAc,SAAUC,OAAOA,CAACC,CAAc,EAAEC,CAAc;EAC5D,IAAIC,IAAI,GAAGL,IAAI,CAACG,CAAC,CAAC;EAClB,IAAIG,IAAI,GAAGN,IAAI,CAACI,CAAC,CAAC;EAElB,IAAIG,IAAI,GAAG,IAAIC,KAAK,CAACL,CAAC,CAACM,MAAM,CAAC;EAC9B,IAAIC,IAAI,GAAG,IAAIF,KAAK,CAACJ,CAAC,CAACK,MAAM,CAAC;EAC9B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,IAAI,CAACE,MAAM,EAAEE,CAAC,EAAE,EAAE;IACpCJ,IAAI,CAACI,CAAC,CAAC,GAAGR,CAAC,CAACQ,CAAC,CAAC,GAAGN,IAAI;IACrBK,IAAI,CAACC,CAAC,CAAC,GAAGP,CAAC,CAACO,CAAC,CAAC,GAAGL,IAAI;;EAGvB,OAAOL,MAAM,CAACM,IAAI,EAAEG,IAAI,CAAC;AAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}