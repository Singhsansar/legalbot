{"ast":null,"code":"/**\n *Returns the Topsoe distance between vectors a and b\n * @link [Topsoe algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function topsoe(a, b) {\n  let ans = 0;\n  for (let i = 0; i < a.length; i++) {\n    ans += a[i] * Math.log(2 * a[i] / (a[i] + b[i])) + b[i] * Math.log(2 * b[i] / (a[i] + b[i]));\n  }\n  return ans;\n}","map":{"version":3,"names":["topsoe","a","b","ans","i","length","Math","log"],"sources":["/home/nikhil/legalbot/legalbot/node_modules/ml-distance/src/distances/topsoe.ts"],"sourcesContent":["import { NumberArray } from 'cheminfo-types';\n/**\n *Returns the Topsoe distance between vectors a and b\n * @link [Topsoe algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function topsoe(a: NumberArray, b: NumberArray): number {\n  let ans = 0;\n  for (let i = 0; i < a.length; i++) {\n    ans +=\n      a[i] * Math.log((2 * a[i]) / (a[i] + b[i])) +\n      b[i] * Math.log((2 * b[i]) / (a[i] + b[i]));\n  }\n  return ans;\n}\n"],"mappings":"AACA;;;;;;;AAOA,eAAc,SAAUA,MAAMA,CAACC,CAAc,EAAEC,CAAc;EAC3D,IAAIC,GAAG,GAAG,CAAC;EACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,CAAC,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACjCD,GAAG,IACDF,CAAC,CAACG,CAAC,CAAC,GAAGE,IAAI,CAACC,GAAG,CAAE,CAAC,GAAGN,CAAC,CAACG,CAAC,CAAC,IAAKH,CAAC,CAACG,CAAC,CAAC,GAAGF,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,GAC3CF,CAAC,CAACE,CAAC,CAAC,GAAGE,IAAI,CAACC,GAAG,CAAE,CAAC,GAAGL,CAAC,CAACE,CAAC,CAAC,IAAKH,CAAC,CAACG,CAAC,CAAC,GAAGF,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC;;EAE/C,OAAOD,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}