{"ast":null,"code":"/**\n * Returns the average of city block and Chebyshev distances between vectors a and b\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function avg(a, b) {\n  let max = 0;\n  let ans = 0;\n  let aux = 0;\n  for (let i = 0; i < a.length; i++) {\n    aux = Math.abs(a[i] - b[i]);\n    ans += aux;\n    if (max < aux) {\n      max = aux;\n    }\n  }\n  return (max + ans) / 2;\n}","map":{"version":3,"names":["avg","a","b","max","ans","aux","i","length","Math","abs"],"sources":["/home/nikhil/legalbot/legalbot/node_modules/ml-distance/src/distances/avg.ts"],"sourcesContent":["import { NumberArray } from 'cheminfo-types';\n\n/**\n * Returns the average of city block and Chebyshev distances between vectors a and b\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function avg(a: NumberArray, b: NumberArray): number {\n  let max = 0;\n  let ans = 0;\n  let aux = 0;\n  for (let i = 0; i < a.length; i++) {\n    aux = Math.abs(a[i] - b[i]);\n    ans += aux;\n    if (max < aux) {\n      max = aux;\n    }\n  }\n  return (max + ans) / 2;\n}\n"],"mappings":"AAEA;;;;;;AAMA,eAAc,SAAUA,GAAGA,CAACC,CAAc,EAAEC,CAAc;EACxD,IAAIC,GAAG,GAAG,CAAC;EACX,IAAIC,GAAG,GAAG,CAAC;EACX,IAAIC,GAAG,GAAG,CAAC;EACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,CAAC,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IACjCD,GAAG,GAAGG,IAAI,CAACC,GAAG,CAACR,CAAC,CAACK,CAAC,CAAC,GAAGJ,CAAC,CAACI,CAAC,CAAC,CAAC;IAC3BF,GAAG,IAAIC,GAAG;IACV,IAAIF,GAAG,GAAGE,GAAG,EAAE;MACbF,GAAG,GAAGE,GAAG;;;EAGb,OAAO,CAACF,GAAG,GAAGC,GAAG,IAAI,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}