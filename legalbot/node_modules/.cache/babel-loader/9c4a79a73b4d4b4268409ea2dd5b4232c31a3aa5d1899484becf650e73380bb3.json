{"ast":null,"code":"'use strict';\n\nfunction assertNumber(number) {\n  if (typeof number !== 'number') {\n    throw new TypeError('Expected a number');\n  }\n}\nexports.ascending = (left, right) => {\n  assertNumber(left);\n  assertNumber(right);\n  if (Number.isNaN(left)) {\n    return -1;\n  }\n  if (Number.isNaN(right)) {\n    return 1;\n  }\n  return left - right;\n};\nexports.descending = (left, right) => {\n  assertNumber(left);\n  assertNumber(right);\n  if (Number.isNaN(left)) {\n    return 1;\n  }\n  if (Number.isNaN(right)) {\n    return -1;\n  }\n  return right - left;\n};","map":{"version":3,"names":["assertNumber","number","TypeError","exports","ascending","left","right","Number","isNaN","descending"],"sources":["/home/nikhil/legalbot/legalbot/node_modules/num-sort/index.js"],"sourcesContent":["'use strict';\n\nfunction assertNumber(number) {\n\tif (typeof number !== 'number') {\n\t\tthrow new TypeError('Expected a number');\n\t}\n}\n\nexports.ascending = (left, right) => {\n\tassertNumber(left);\n\tassertNumber(right);\n\n\tif (Number.isNaN(left)) {\n\t\treturn -1;\n\t}\n\n\tif (Number.isNaN(right)) {\n\t\treturn 1;\n\t}\n\n\treturn left - right;\n};\n\nexports.descending = (left, right) => {\n\tassertNumber(left);\n\tassertNumber(right);\n\n\tif (Number.isNaN(left)) {\n\t\treturn 1;\n\t}\n\n\tif (Number.isNaN(right)) {\n\t\treturn -1;\n\t}\n\n\treturn right - left;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,YAAYA,CAACC,MAAM,EAAE;EAC7B,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC/B,MAAM,IAAIC,SAAS,CAAC,mBAAmB,CAAC;EACzC;AACD;AAEAC,OAAO,CAACC,SAAS,GAAG,CAACC,IAAI,EAAEC,KAAK,KAAK;EACpCN,YAAY,CAACK,IAAI,CAAC;EAClBL,YAAY,CAACM,KAAK,CAAC;EAEnB,IAAIC,MAAM,CAACC,KAAK,CAACH,IAAI,CAAC,EAAE;IACvB,OAAO,CAAC,CAAC;EACV;EAEA,IAAIE,MAAM,CAACC,KAAK,CAACF,KAAK,CAAC,EAAE;IACxB,OAAO,CAAC;EACT;EAEA,OAAOD,IAAI,GAAGC,KAAK;AACpB,CAAC;AAEDH,OAAO,CAACM,UAAU,GAAG,CAACJ,IAAI,EAAEC,KAAK,KAAK;EACrCN,YAAY,CAACK,IAAI,CAAC;EAClBL,YAAY,CAACM,KAAK,CAAC;EAEnB,IAAIC,MAAM,CAACC,KAAK,CAACH,IAAI,CAAC,EAAE;IACvB,OAAO,CAAC;EACT;EAEA,IAAIE,MAAM,CAACC,KAAK,CAACF,KAAK,CAAC,EAAE;IACxB,OAAO,CAAC,CAAC;EACV;EAEA,OAAOA,KAAK,GAAGD,IAAI;AACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}