{"ast":null,"code":"\"use strict\";\n\n/* tslint:disable */\n/* eslint-disable */\n/**\n * Pinecone Control Plane API\n * Pinecone is a vector database that makes it easy to search and retrieve billions of high-dimensional vectors.\n *\n * The version of the OpenAPI document: v1\n * Contact: support@pinecone.io\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DataPlaneApi = void 0;\nvar runtime = __importStar(require(\"../runtime\"));\nvar index_1 = require(\"../models/index\");\n/**\n *\n */\nvar DataPlaneApi = /** @class */function (_super) {\n  __extends(DataPlaneApi, _super);\n  function DataPlaneApi() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * The `delete` operation deletes vectors, by id, from a single namespace.  For guidance and examples, see [Delete data](https://docs.pinecone.io/docs/delete-data).\n   * Delete vectors\n   */\n  DataPlaneApi.prototype._deleteRaw = function (requestParameters, initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var queryParameters, headerParameters, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (requestParameters.deleteRequest === null || requestParameters.deleteRequest === undefined) {\n              throw new runtime.RequiredError('deleteRequest', 'Required parameter requestParameters.deleteRequest was null or undefined when calling _delete.');\n            }\n            queryParameters = {};\n            headerParameters = {};\n            headerParameters['Content-Type'] = 'application/json';\n            if (this.configuration && this.configuration.apiKey) {\n              headerParameters[\"Api-Key\"] = this.configuration.apiKey(\"Api-Key\"); // ApiKeyAuth authentication\n            }\n            return [4 /*yield*/, this.request({\n              path: \"/vectors/delete\",\n              method: 'POST',\n              headers: headerParameters,\n              query: queryParameters,\n              body: (0, index_1.DeleteRequestToJSON)(requestParameters.deleteRequest)\n            }, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [2 /*return*/, new runtime.JSONApiResponse(response)];\n        }\n      });\n    });\n  };\n  /**\n   * The `delete` operation deletes vectors, by id, from a single namespace.  For guidance and examples, see [Delete data](https://docs.pinecone.io/docs/delete-data).\n   * Delete vectors\n   */\n  DataPlaneApi.prototype._delete = function (requestParameters, initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this._deleteRaw(requestParameters, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [4 /*yield*/, response.value()];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * DEPRECATED. Use [`POST /delete`](https://docs.pinecone.io/reference/delete) instead.\n   * Delete vectors\n   */\n  DataPlaneApi.prototype.altDeleteRaw = function (requestParameters, initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var queryParameters, headerParameters, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            queryParameters = {};\n            if (requestParameters.ids) {\n              queryParameters['ids'] = requestParameters.ids;\n            }\n            if (requestParameters.deleteAll !== undefined) {\n              queryParameters['deleteAll'] = requestParameters.deleteAll;\n            }\n            if (requestParameters.namespace !== undefined) {\n              queryParameters['namespace'] = requestParameters.namespace;\n            }\n            headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n              headerParameters[\"Api-Key\"] = this.configuration.apiKey(\"Api-Key\"); // ApiKeyAuth authentication\n            }\n            return [4 /*yield*/, this.request({\n              path: \"/vectors/delete\",\n              method: 'DELETE',\n              headers: headerParameters,\n              query: queryParameters\n            }, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [2 /*return*/, new runtime.JSONApiResponse(response)];\n        }\n      });\n    });\n  };\n  /**\n   * DEPRECATED. Use [`POST /delete`](https://docs.pinecone.io/reference/delete) instead.\n   * Delete vectors\n   */\n  DataPlaneApi.prototype.altDelete = function (requestParameters, initOverrides) {\n    if (requestParameters === void 0) {\n      requestParameters = {};\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.altDeleteRaw(requestParameters, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [4 /*yield*/, response.value()];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * DEPRECATED. Use [`POST /describe_index_stats`](https://docs.pinecone.io/reference/describe_index_stats) instead.\n   * Get index stats\n   */\n  DataPlaneApi.prototype.altDescribeIndexStatsRaw = function (initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var queryParameters, headerParameters, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            queryParameters = {};\n            headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n              headerParameters[\"Api-Key\"] = this.configuration.apiKey(\"Api-Key\"); // ApiKeyAuth authentication\n            }\n            return [4 /*yield*/, this.request({\n              path: \"/describe_index_stats\",\n              method: 'GET',\n              headers: headerParameters,\n              query: queryParameters\n            }, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) {\n              return (0, index_1.DescribeIndexStatsResponseFromJSON)(jsonValue);\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * DEPRECATED. Use [`POST /describe_index_stats`](https://docs.pinecone.io/reference/describe_index_stats) instead.\n   * Get index stats\n   */\n  DataPlaneApi.prototype.altDescribeIndexStats = function (initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.altDescribeIndexStatsRaw(initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [4 /*yield*/, response.value()];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * The `describe_index_stats` operation returns statistics about the contents of an index, including the vector count per namespace and the number of dimensions, and the index fullness.  Serverless indexes scale automatically as needed, so index fullness is relevant only for pod-based indexes.  For pod-based indexes, the index fullness result may be inaccurate during pod resizing; to get the status of a pod resizing process, use [`describe_index`](https://www.pinecone.io/docs/api/operation/describe_index/).\n   * Get index stats\n   */\n  DataPlaneApi.prototype.describeIndexStatsRaw = function (requestParameters, initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var queryParameters, headerParameters, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (requestParameters.describeIndexStatsRequest === null || requestParameters.describeIndexStatsRequest === undefined) {\n              throw new runtime.RequiredError('describeIndexStatsRequest', 'Required parameter requestParameters.describeIndexStatsRequest was null or undefined when calling describeIndexStats.');\n            }\n            queryParameters = {};\n            headerParameters = {};\n            headerParameters['Content-Type'] = 'application/json';\n            if (this.configuration && this.configuration.apiKey) {\n              headerParameters[\"Api-Key\"] = this.configuration.apiKey(\"Api-Key\"); // ApiKeyAuth authentication\n            }\n            return [4 /*yield*/, this.request({\n              path: \"/describe_index_stats\",\n              method: 'POST',\n              headers: headerParameters,\n              query: queryParameters,\n              body: (0, index_1.DescribeIndexStatsRequestToJSON)(requestParameters.describeIndexStatsRequest)\n            }, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) {\n              return (0, index_1.DescribeIndexStatsResponseFromJSON)(jsonValue);\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * The `describe_index_stats` operation returns statistics about the contents of an index, including the vector count per namespace and the number of dimensions, and the index fullness.  Serverless indexes scale automatically as needed, so index fullness is relevant only for pod-based indexes.  For pod-based indexes, the index fullness result may be inaccurate during pod resizing; to get the status of a pod resizing process, use [`describe_index`](https://www.pinecone.io/docs/api/operation/describe_index/).\n   * Get index stats\n   */\n  DataPlaneApi.prototype.describeIndexStats = function (requestParameters, initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.describeIndexStatsRaw(requestParameters, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [4 /*yield*/, response.value()];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * The `fetch` operation looks up and returns vectors, by ID, from a single namespace. The returned vectors include the vector data and/or metadata.  For guidance and examples, see [Fetch data](https://docs.pinecone.io/docs/fetch-data).\n   * Fetch vectors\n   */\n  DataPlaneApi.prototype.fetchRaw = function (requestParameters, initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var queryParameters, headerParameters, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (requestParameters.ids === null || requestParameters.ids === undefined) {\n              throw new runtime.RequiredError('ids', 'Required parameter requestParameters.ids was null or undefined when calling fetch.');\n            }\n            queryParameters = {};\n            if (requestParameters.ids) {\n              queryParameters['ids'] = requestParameters.ids;\n            }\n            if (requestParameters.namespace !== undefined) {\n              queryParameters['namespace'] = requestParameters.namespace;\n            }\n            headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n              headerParameters[\"Api-Key\"] = this.configuration.apiKey(\"Api-Key\"); // ApiKeyAuth authentication\n            }\n            return [4 /*yield*/, this.request({\n              path: \"/vectors/fetch\",\n              method: 'GET',\n              headers: headerParameters,\n              query: queryParameters\n            }, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) {\n              return (0, index_1.FetchResponseFromJSON)(jsonValue);\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * The `fetch` operation looks up and returns vectors, by ID, from a single namespace. The returned vectors include the vector data and/or metadata.  For guidance and examples, see [Fetch data](https://docs.pinecone.io/docs/fetch-data).\n   * Fetch vectors\n   */\n  DataPlaneApi.prototype.fetch = function (requestParameters, initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.fetchRaw(requestParameters, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [4 /*yield*/, response.value()];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * The `list` operation lists the IDs of vectors in a single namespace of a serverless index. An optional prefix can be passed to limit the results to IDs with a common prefix.  `list` returns up to 100 IDs at a time by default in sorted order (bitwise/\\\"C\\\" collation). If the `limit` parameter is set, `list` returns up to that number of IDs instead. Whenever there are additional IDs to return, the response also includes a `pagination_token` that you can use to get the next batch of IDs. When the response does not include a `pagination_token`, there are no more IDs to return.  For guidance and examples, see [Get record IDs](https://docs.pinecone.io/docs/get-record-ids).  **Note:** `list` is supported only for serverless indexes.\n   * List vector IDs\n   */\n  DataPlaneApi.prototype.listRaw = function (requestParameters, initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var queryParameters, headerParameters, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            queryParameters = {};\n            if (requestParameters.prefix !== undefined) {\n              queryParameters['prefix'] = requestParameters.prefix;\n            }\n            if (requestParameters.limit !== undefined) {\n              queryParameters['limit'] = requestParameters.limit;\n            }\n            if (requestParameters.paginationToken !== undefined) {\n              queryParameters['paginationToken'] = requestParameters.paginationToken;\n            }\n            if (requestParameters.namespace !== undefined) {\n              queryParameters['namespace'] = requestParameters.namespace;\n            }\n            headerParameters = {};\n            if (this.configuration && this.configuration.apiKey) {\n              headerParameters[\"Api-Key\"] = this.configuration.apiKey(\"Api-Key\"); // ApiKeyAuth authentication\n            }\n            return [4 /*yield*/, this.request({\n              path: \"/vectors/list\",\n              method: 'GET',\n              headers: headerParameters,\n              query: queryParameters\n            }, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) {\n              return (0, index_1.ListResponseFromJSON)(jsonValue);\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * The `list` operation lists the IDs of vectors in a single namespace of a serverless index. An optional prefix can be passed to limit the results to IDs with a common prefix.  `list` returns up to 100 IDs at a time by default in sorted order (bitwise/\\\"C\\\" collation). If the `limit` parameter is set, `list` returns up to that number of IDs instead. Whenever there are additional IDs to return, the response also includes a `pagination_token` that you can use to get the next batch of IDs. When the response does not include a `pagination_token`, there are no more IDs to return.  For guidance and examples, see [Get record IDs](https://docs.pinecone.io/docs/get-record-ids).  **Note:** `list` is supported only for serverless indexes.\n   * List vector IDs\n   */\n  DataPlaneApi.prototype.list = function (requestParameters, initOverrides) {\n    if (requestParameters === void 0) {\n      requestParameters = {};\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.listRaw(requestParameters, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [4 /*yield*/, response.value()];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * The `query` operation searches a namespace, using a query vector. It retrieves the ids of the most similar items in a namespace, along with their similarity scores.  For guidance and examples, see [Query data](https://docs.pinecone.io/docs/query-data).\n   * Query vectors\n   */\n  DataPlaneApi.prototype.queryRaw = function (requestParameters, initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var queryParameters, headerParameters, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (requestParameters.queryRequest === null || requestParameters.queryRequest === undefined) {\n              throw new runtime.RequiredError('queryRequest', 'Required parameter requestParameters.queryRequest was null or undefined when calling query.');\n            }\n            queryParameters = {};\n            headerParameters = {};\n            headerParameters['Content-Type'] = 'application/json';\n            if (this.configuration && this.configuration.apiKey) {\n              headerParameters[\"Api-Key\"] = this.configuration.apiKey(\"Api-Key\"); // ApiKeyAuth authentication\n            }\n            return [4 /*yield*/, this.request({\n              path: \"/query\",\n              method: 'POST',\n              headers: headerParameters,\n              query: queryParameters,\n              body: (0, index_1.QueryRequestToJSON)(requestParameters.queryRequest)\n            }, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) {\n              return (0, index_1.QueryResponseFromJSON)(jsonValue);\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * The `query` operation searches a namespace, using a query vector. It retrieves the ids of the most similar items in a namespace, along with their similarity scores.  For guidance and examples, see [Query data](https://docs.pinecone.io/docs/query-data).\n   * Query vectors\n   */\n  DataPlaneApi.prototype.query = function (requestParameters, initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.queryRaw(requestParameters, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [4 /*yield*/, response.value()];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * The `update` operation updates a vector in a namespace. If a value is included, it will overwrite the previous value. If a `set_metadata` is included, the values of the fields specified in it will be added or overwrite the previous value.  For guidance and examples, see [Update data](https://docs.pinecone.io/docs/update-data).\n   * Update a vector\n   */\n  DataPlaneApi.prototype.updateRaw = function (requestParameters, initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var queryParameters, headerParameters, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (requestParameters.updateRequest === null || requestParameters.updateRequest === undefined) {\n              throw new runtime.RequiredError('updateRequest', 'Required parameter requestParameters.updateRequest was null or undefined when calling update.');\n            }\n            queryParameters = {};\n            headerParameters = {};\n            headerParameters['Content-Type'] = 'application/json';\n            if (this.configuration && this.configuration.apiKey) {\n              headerParameters[\"Api-Key\"] = this.configuration.apiKey(\"Api-Key\"); // ApiKeyAuth authentication\n            }\n            return [4 /*yield*/, this.request({\n              path: \"/vectors/update\",\n              method: 'POST',\n              headers: headerParameters,\n              query: queryParameters,\n              body: (0, index_1.UpdateRequestToJSON)(requestParameters.updateRequest)\n            }, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [2 /*return*/, new runtime.JSONApiResponse(response)];\n        }\n      });\n    });\n  };\n  /**\n   * The `update` operation updates a vector in a namespace. If a value is included, it will overwrite the previous value. If a `set_metadata` is included, the values of the fields specified in it will be added or overwrite the previous value.  For guidance and examples, see [Update data](https://docs.pinecone.io/docs/update-data).\n   * Update a vector\n   */\n  DataPlaneApi.prototype.update = function (requestParameters, initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.updateRaw(requestParameters, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [4 /*yield*/, response.value()];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * The `upsert` operation writes vectors into a namespace. If a new value is upserted for an existing vector ID, it will overwrite the previous value.  For guidance and examples, see [Upsert data](https://docs.pinecone.io/docs/upsert-data).\n   * Upsert vectors\n   */\n  DataPlaneApi.prototype.upsertRaw = function (requestParameters, initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var queryParameters, headerParameters, response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (requestParameters.upsertRequest === null || requestParameters.upsertRequest === undefined) {\n              throw new runtime.RequiredError('upsertRequest', 'Required parameter requestParameters.upsertRequest was null or undefined when calling upsert.');\n            }\n            queryParameters = {};\n            headerParameters = {};\n            headerParameters['Content-Type'] = 'application/json';\n            if (this.configuration && this.configuration.apiKey) {\n              headerParameters[\"Api-Key\"] = this.configuration.apiKey(\"Api-Key\"); // ApiKeyAuth authentication\n            }\n            return [4 /*yield*/, this.request({\n              path: \"/vectors/upsert\",\n              method: 'POST',\n              headers: headerParameters,\n              query: queryParameters,\n              body: (0, index_1.UpsertRequestToJSON)(requestParameters.upsertRequest)\n            }, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) {\n              return (0, index_1.UpsertResponseFromJSON)(jsonValue);\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * The `upsert` operation writes vectors into a namespace. If a new value is upserted for an existing vector ID, it will overwrite the previous value.  For guidance and examples, see [Upsert data](https://docs.pinecone.io/docs/upsert-data).\n   * Upsert vectors\n   */\n  DataPlaneApi.prototype.upsert = function (requestParameters, initOverrides) {\n    return __awaiter(this, void 0, void 0, function () {\n      var response;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.upsertRaw(requestParameters, initOverrides)];\n          case 1:\n            response = _a.sent();\n            return [4 /*yield*/, response.value()];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  return DataPlaneApi;\n}(runtime.BaseAPI);\nexports.DataPlaneApi = DataPlaneApi;","map":{"version":3,"names":["runtime","__importStar","require","index_1","DataPlaneApi","_super","__extends","prototype","_deleteRaw","requestParameters","initOverrides","deleteRequest","undefined","RequiredError","queryParameters","headerParameters","configuration","apiKey","request","path","method","headers","query","body","DeleteRequestToJSON","response","_a","sent","JSONApiResponse","_delete","value","altDeleteRaw","ids","deleteAll","namespace","altDelete","altDescribeIndexStatsRaw","jsonValue","DescribeIndexStatsResponseFromJSON","altDescribeIndexStats","describeIndexStatsRaw","describeIndexStatsRequest","DescribeIndexStatsRequestToJSON","describeIndexStats","fetchRaw","FetchResponseFromJSON","fetch","listRaw","prefix","limit","paginationToken","ListResponseFromJSON","list","queryRaw","queryRequest","QueryRequestToJSON","QueryResponseFromJSON","updateRaw","updateRequest","UpdateRequestToJSON","update","upsertRaw","upsertRequest","UpsertRequestToJSON","UpsertResponseFromJSON","upsert","BaseAPI","exports"],"sources":["../../../src/pinecone-generated-ts-fetch/apis/DataPlaneApi.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}