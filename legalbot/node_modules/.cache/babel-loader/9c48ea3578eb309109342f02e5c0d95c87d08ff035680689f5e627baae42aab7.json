{"ast":null,"code":"/**\n *Returns the Taneja distance between vectors a and b\n * @link [Taneja algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function taneja(a, b) {\n  let ans = 0;\n  for (let i = 0; i < a.length; i++) {\n    ans += (a[i] + b[i]) / 2 * Math.log((a[i] + b[i]) / (2 * Math.sqrt(a[i] * b[i])));\n  }\n  return ans;\n}","map":{"version":3,"names":["taneja","a","b","ans","i","length","Math","log","sqrt"],"sources":["/home/nikhil/legalbot/legalbot/node_modules/ml-distance/src/distances/taneja.ts"],"sourcesContent":["import { NumberArray } from 'cheminfo-types';\n/**\n *Returns the Taneja distance between vectors a and b\n * @link [Taneja algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function taneja(a: NumberArray, b: NumberArray): number {\n  let ans = 0;\n  for (let i = 0; i < a.length; i++) {\n    ans +=\n      ((a[i] + b[i]) / 2) *\n      Math.log((a[i] + b[i]) / (2 * Math.sqrt(a[i] * b[i])));\n  }\n  return ans;\n}\n"],"mappings":"AACA;;;;;;;AAOA,eAAc,SAAUA,MAAMA,CAACC,CAAc,EAAEC,CAAc;EAC3D,IAAIC,GAAG,GAAG,CAAC;EACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,CAAC,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACjCD,GAAG,IACA,CAACF,CAAC,CAACG,CAAC,CAAC,GAAGF,CAAC,CAACE,CAAC,CAAC,IAAI,CAAC,GAClBE,IAAI,CAACC,GAAG,CAAC,CAACN,CAAC,CAACG,CAAC,CAAC,GAAGF,CAAC,CAACE,CAAC,CAAC,KAAK,CAAC,GAAGE,IAAI,CAACE,IAAI,CAACP,CAAC,CAACG,CAAC,CAAC,GAAGF,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE1D,OAAOD,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}