{"ast":null,"code":"/**\n *Returns the Dice distance between vectors a and b\n * @link [Dice algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function dice(a, b) {\n  let a2 = 0;\n  let b2 = 0;\n  let prod2 = 0;\n  for (let i = 0; i < a.length; i++) {\n    a2 += a[i] * a[i];\n    b2 += b[i] * b[i];\n    prod2 += (a[i] - b[i]) * (a[i] - b[i]);\n  }\n  return prod2 / (a2 + b2);\n}","map":{"version":3,"names":["dice","a","b","a2","b2","prod2","i","length"],"sources":["/home/nikhil/legalbot/legalbot/node_modules/ml-distance/src/distances/dice.ts"],"sourcesContent":["import { NumberArray } from 'cheminfo-types';\n/**\n *Returns the Dice distance between vectors a and b\n * @link [Dice algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function dice(a: NumberArray, b: NumberArray): number {\n  let a2 = 0;\n  let b2 = 0;\n  let prod2 = 0;\n  for (let i = 0; i < a.length; i++) {\n    a2 += a[i] * a[i];\n    b2 += b[i] * b[i];\n    prod2 += (a[i] - b[i]) * (a[i] - b[i]);\n  }\n  return prod2 / (a2 + b2);\n}\n"],"mappings":"AACA;;;;;;;AAOA,eAAc,SAAUA,IAAIA,CAACC,CAAc,EAAEC,CAAc;EACzD,IAAIC,EAAE,GAAG,CAAC;EACV,IAAIC,EAAE,GAAG,CAAC;EACV,IAAIC,KAAK,GAAG,CAAC;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,CAAC,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IACjCH,EAAE,IAAIF,CAAC,CAACK,CAAC,CAAC,GAAGL,CAAC,CAACK,CAAC,CAAC;IACjBF,EAAE,IAAIF,CAAC,CAACI,CAAC,CAAC,GAAGJ,CAAC,CAACI,CAAC,CAAC;IACjBD,KAAK,IAAI,CAACJ,CAAC,CAACK,CAAC,CAAC,GAAGJ,CAAC,CAACI,CAAC,CAAC,KAAKL,CAAC,CAACK,CAAC,CAAC,GAAGJ,CAAC,CAACI,CAAC,CAAC,CAAC;;EAExC,OAAOD,KAAK,IAAIF,EAAE,GAAGC,EAAE,CAAC;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}