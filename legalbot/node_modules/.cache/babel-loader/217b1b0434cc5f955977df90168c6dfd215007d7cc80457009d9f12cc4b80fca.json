{"ast":null,"code":"/**\n *Returns the Bhattacharyy distance between vectors a and b\n * @link [Bhattacharyy algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function bhattacharyya(a, b) {\n  let ans = 0;\n  for (let i = 0; i < a.length; i++) {\n    ans += Math.sqrt(a[i] * b[i]);\n  }\n  return -Math.log(ans);\n}","map":{"version":3,"names":["bhattacharyya","a","b","ans","i","length","Math","sqrt","log"],"sources":["/home/nikhil/legalbot/legalbot/node_modules/ml-distance/src/distances/bhattacharyya.ts"],"sourcesContent":["import { NumberArray } from 'cheminfo-types';\n\n/**\n *Returns the Bhattacharyy distance between vectors a and b\n * @link [Bhattacharyy algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function bhattacharyya(a: NumberArray, b: NumberArray): number {\n  let ans = 0;\n  for (let i = 0; i < a.length; i++) {\n    ans += Math.sqrt(a[i] * b[i]);\n  }\n  return -Math.log(ans);\n}\n"],"mappings":"AAEA;;;;;;;AAOA,eAAc,SAAUA,aAAaA,CAACC,CAAc,EAAEC,CAAc;EAClE,IAAIC,GAAG,GAAG,CAAC;EACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,CAAC,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACjCD,GAAG,IAAIG,IAAI,CAACC,IAAI,CAACN,CAAC,CAACG,CAAC,CAAC,GAAGF,CAAC,CAACE,CAAC,CAAC,CAAC;;EAE/B,OAAO,CAACE,IAAI,CAACE,GAAG,CAACL,GAAG,CAAC;AACvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}