{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildConfigValidator = exports.buildValidator = exports.errorFormatter = void 0;\nvar ajv_1 = __importDefault(require(\"ajv\"));\nvar errors_1 = require(\"./errors\");\nvar environment_1 = require(\"./utils/environment\");\nvar prepend = function (prefix, message) {\n  return \"\".concat(prefix, \" \").concat(message);\n};\nvar schemaPathPropNameRegex = /properties\\/(.+)\\//;\nvar schemaPathArrayPropNameRegex = /properties\\/(.+)\\/items/;\nvar schemaPathGroupNumberRegex = /anyOf\\/(\\d+)\\/(.+)/;\nvar instancePathItemIndexRegex = /(\\d+)$/;\n// If there are more than maxErrors errors in a group, they\n// will get summarized with an error count.\nvar maxErrors = 3;\nvar formatIndividualError = function (e, formattedMessageList) {\n  if (e.schemaPath.indexOf('properties') > -1) {\n    // property of an object\n    if (e.schemaPath.indexOf('items') > -1) {\n      // property is an array\n      var propNameMatch = schemaPathArrayPropNameRegex.exec(e.schemaPath);\n      var propName = propNameMatch ? propNameMatch[1] : 'unknown';\n      var itemIndexMatch = instancePathItemIndexRegex.exec(e.instancePath);\n      var itemIndex = itemIndexMatch ? itemIndexMatch[1] : 'unknown';\n      formattedMessageList.push(\"item at index \".concat(itemIndex, \" of the '\").concat(propName, \"' array \").concat(e.message));\n    } else {\n      // property is not an array\n      var propNameMatch = schemaPathPropNameRegex.exec(e.schemaPath);\n      var propName = propNameMatch ? propNameMatch[1] : 'unknown';\n      formattedMessageList.push(\"property '\".concat(propName, \"' \").concat(e.message));\n    }\n  } else if (e.schemaPath.indexOf('items') > -1) {\n    // item in an array\n    var itemIndexMatch = instancePathItemIndexRegex.exec(e.instancePath);\n    var itemIndex = itemIndexMatch ? itemIndexMatch[1] : 'unknown';\n    formattedMessageList.push(\"item at index \".concat(itemIndex, \" of the array \").concat(e.message));\n  } else if (e.instancePath === '') {\n    // parameter is something other than an object, e.g. string\n    formattedMessageList.push(\"argument \".concat(e.message));\n  }\n};\nvar missingPropertiesErrors = function (subject, errors, messageParts) {\n  var missingPropertyNames = errors.filter(function (error) {\n    return error.keyword === 'required';\n  }).map(function (error) {\n    return error.params.missingProperty !== undefined ? error.params.missingProperty : 'unknown';\n  });\n  if (missingPropertyNames.length > 0) {\n    var missingMessage = prepend(subject, \"\".concat(messageParts.length > 0 ? 'M' : 'm', \"ust have required \").concat(missingPropertyNames.length > 1 ? 'properties' : 'property', \": \").concat(missingPropertyNames.join(', '), \".\"));\n    messageParts.push(missingMessage);\n  }\n};\nvar neverErrors = function (subject, errors, messageParts) {\n  var neverPropertyErrors = errors.filter(function (error) {\n    return error.keyword === 'not';\n  }).map(function (error) {\n    return error.instancePath.slice(1);\n  });\n  if (neverPropertyErrors.length > 0) {\n    var neverMessage = prepend(subject, \"must not have \".concat(neverPropertyErrors.length > 1 ? 'properties' : 'property', \": \").concat(neverPropertyErrors.join(', '), \".\"));\n    messageParts.push(neverMessage);\n  }\n};\nvar typeErrors = function (subject, errors, messageParts) {\n  var typeErrorsList = [];\n  var anyOfConstPropErrors = errors.filter(function (error) {\n    return error.schemaPath.indexOf('anyOf') > -1 && error.keyword === 'const' && error.instancePath.length > 0;\n  });\n  var errorCount = 0;\n  // handle possible literal types first\n  var propErrorGroups = {};\n  if (anyOfConstPropErrors.length > 0) {\n    for (var _i = 0, anyOfConstPropErrors_1 = anyOfConstPropErrors; _i < anyOfConstPropErrors_1.length; _i++) {\n      var error = anyOfConstPropErrors_1[_i];\n      var constValue = error.instancePath.slice(1);\n      if (propErrorGroups[constValue]) {\n        propErrorGroups[constValue].push(error);\n      } else {\n        propErrorGroups[constValue] = [error];\n      }\n    }\n    var properties = Object.keys(propErrorGroups);\n    properties.forEach(function (property) {\n      var constValueErrors = propErrorGroups[property];\n      typeErrorsList.push(\"property '\".concat(property, \"' must be equal to one of: \") + Object.values(constValueErrors).map(function (group) {\n        return \"'\".concat(group.params.allowedValue, \"'\");\n      }).join(', '));\n    });\n  }\n  // typebox also emits type errors for each value of a literal so we want to exclude these\n  var anyOfKeys = Object.keys(propErrorGroups);\n  for (var i = 0; i < errors.length; i++) {\n    var e = errors[i];\n    if (e.keyword === 'type' && !anyOfKeys.includes(e.instancePath.slice(1))) {\n      errorCount += 1;\n      if (errorCount <= maxErrors) {\n        formatIndividualError(e, typeErrorsList);\n      }\n    }\n  }\n  if (errorCount > maxErrors) {\n    typeErrorsList.push(\"and \".concat(errorCount - maxErrors, \" other errors\"));\n  }\n  if (typeErrorsList.length > 0) {\n    var prefix = messageParts.length > 0 ? 'There were also type errors:' : \"\".concat(subject, \" had type errors:\");\n    var typeErrorMessage = prepend(prefix, typeErrorsList.join(', ')) + '.';\n    messageParts.push(typeErrorMessage);\n  }\n};\nvar validationErrors = function (subject, errors, messageParts) {\n  var validationErrors = [];\n  var errorCount = 0;\n  // List of error keywords from https://ajv.js.org/api.html#validation-errors\n  for (var _i = 0, errors_2 = errors; _i < errors_2.length; _i++) {\n    var e = errors_2[_i];\n    if (e.keyword === 'minLength' && e.params.limit === 1) {\n      e.message = 'must not be blank';\n    }\n    switch (e.keyword) {\n      case 'minimum':\n      case 'maximum':\n      case 'exclusiveMinimum':\n      case 'exclusiveMaximum':\n      case 'minLength':\n      case 'maxLength':\n      case 'maxProperties':\n      case 'minProperties':\n      case 'minItems':\n      case 'maxItems':\n      case 'additionalItems':\n      case 'additionalProperties':\n        errorCount += 1;\n        if (errorCount > maxErrors) {\n          continue;\n        } else {\n          formatIndividualError(e, validationErrors);\n        }\n        break;\n      default:\n      // noop, other non-validation error handled elsewhere\n    }\n  }\n  if (errorCount > maxErrors) {\n    validationErrors.push(\"and \".concat(errorCount - maxErrors, \" other errors\"));\n  }\n  if (validationErrors.length > 0) {\n    var prefix = messageParts.length > 0 ? 'There were also validation errors:' : \"\".concat(subject, \" had validation errors:\");\n    var validationErrorMessage = prepend(prefix, validationErrors.join(', ')) + '.';\n    messageParts.push(validationErrorMessage);\n  }\n};\nvar errorFormatter = function (subject, errors) {\n  var anyOfArgumentErrors = errors.filter(function (error) {\n    return error.schemaPath.indexOf('anyOf') > -1 && error.keyword !== 'anyOf' && error.keyword !== 'const' && error.keyword !== 'type';\n  });\n  if (anyOfArgumentErrors.length > 0) {\n    var groups = {};\n    for (var _i = 0, anyOfArgumentErrors_1 = anyOfArgumentErrors; _i < anyOfArgumentErrors_1.length; _i++) {\n      var error = anyOfArgumentErrors_1[_i];\n      var schemaPathMatch = schemaPathGroupNumberRegex.exec(error.schemaPath);\n      var groupNumber = schemaPathMatch ? schemaPathMatch[1] : 'unknown';\n      // Remove the anyOf portion of the schema path to avoid infinite loop\n      // when building message for each error group\n      error.schemaPath = schemaPathMatch ? schemaPathMatch[2] : 'unknown';\n      if (groups[groupNumber]) {\n        groups[groupNumber].push(error);\n      } else {\n        groups[groupNumber] = [error];\n      }\n    }\n    // concat errors for each error group\n    return \"\".concat(subject, \" accepts multiple types. Either \") + Object.entries(groups).map(function (_a) {\n      var key = _a[0],\n        group = _a[1];\n      return \"\".concat(parseInt(key) + 1, \")\") + (0, exports.errorFormatter)('', group);\n    }).join(' ');\n  }\n  var messageParts = [];\n  neverErrors(subject, errors, messageParts);\n  missingPropertiesErrors(subject, errors, messageParts);\n  typeErrors(subject, errors, messageParts);\n  validationErrors(subject, errors, messageParts);\n  return messageParts.join(' ');\n};\nexports.errorFormatter = errorFormatter;\nvar buildValidator = function (errorMessagePrefix, schema) {\n  if ((0, environment_1.isEdge)()) {\n    // Ajv schema compilation does not work in the Edge Runtime.\n    return function (data) {}; // eslint-disable-line\n  }\n  if (typeof process !== 'undefined' && process && process.env && process.env.PINECONE_DISABLE_RUNTIME_VALIDATIONS) {\n    // Runtime method validations are most useful when learning to use the client\n    // in an interactive REPL or when developing an application that does not use\n    // Typescript to provide the benefits of static type-checking. However, if your\n    // application is using Typescript and/or you have gained confidence of correct\n    // usage through testing, you may want to disable these runtime validations\n    // to improve performance.\n    //\n    // The PINECONE_DISABLE_RUNTIME_VALIDATIONS env var provides a way to disable\n    // all runtime validation. If it is set, all validator functions will immediately\n    // return without performing any validation.\n    return function (data) {}; // eslint-disable-line\n  }\n  var ajv = new ajv_1.default({\n    allErrors: true\n  });\n  var validate = ajv.compile(schema);\n  return function (data) {\n    var valid = validate(data);\n    if (!valid) {\n      var errors = validate.errors || [];\n      var msg = (0, exports.errorFormatter)(errorMessagePrefix, errors);\n      throw new errors_1.PineconeArgumentError(msg);\n    }\n    return data;\n  };\n};\nexports.buildValidator = buildValidator;\nvar buildConfigValidator = function (schema, methodName) {\n  var prefix = \"The argument to \".concat(methodName);\n  return (0, exports.buildValidator)(prefix, schema);\n};\nexports.buildConfigValidator = buildConfigValidator;","map":{"version":3,"names":["ajv_1","__importDefault","require","errors_1","environment_1","prepend","prefix","message","concat","schemaPathPropNameRegex","schemaPathArrayPropNameRegex","schemaPathGroupNumberRegex","instancePathItemIndexRegex","maxErrors","formatIndividualError","e","formattedMessageList","schemaPath","indexOf","propNameMatch","exec","propName","itemIndexMatch","instancePath","itemIndex","push","missingPropertiesErrors","subject","errors","messageParts","missingPropertyNames","filter","error","keyword","map","params","missingProperty","undefined","length","missingMessage","join","neverErrors","neverPropertyErrors","slice","neverMessage","typeErrors","typeErrorsList","anyOfConstPropErrors","errorCount","propErrorGroups","_i","anyOfConstPropErrors_1","constValue","properties","Object","keys","forEach","property","constValueErrors","values","group","allowedValue","anyOfKeys","i","includes","typeErrorMessage","validationErrors","errors_2","limit","validationErrorMessage","errorFormatter","anyOfArgumentErrors","groups","anyOfArgumentErrors_1","schemaPathMatch","groupNumber","entries","_a","key","parseInt","exports","buildValidator","errorMessagePrefix","schema","isEdge","data","process","env","PINECONE_DISABLE_RUNTIME_VALIDATIONS","ajv","default","allErrors","validate","compile","valid","msg","PineconeArgumentError","buildConfigValidator","methodName"],"sources":["../src/validator.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}