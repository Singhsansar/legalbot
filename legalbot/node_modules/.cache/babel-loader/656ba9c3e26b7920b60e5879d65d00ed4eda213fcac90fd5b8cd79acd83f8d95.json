{"ast":null,"code":"/**\n *Returns the Chebyshev distance between vectors a and b\n * @link [Chebyshev algorithm](https://en.wikipedia.org/wiki/Chebyshev_distance)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function chebyshev(a, b) {\n  let max = 0;\n  let aux = 0;\n  for (let i = 0; i < a.length; i++) {\n    aux = Math.abs(a[i] - b[i]);\n    if (max < aux) {\n      max = aux;\n    }\n  }\n  return max;\n}","map":{"version":3,"names":["chebyshev","a","b","max","aux","i","length","Math","abs"],"sources":["/home/nikhil/legalbot/legalbot/node_modules/ml-distance/src/distances/chebyshev.ts"],"sourcesContent":["import { NumberArray } from 'cheminfo-types';\n\n/**\n *Returns the Chebyshev distance between vectors a and b\n * @link [Chebyshev algorithm](https://en.wikipedia.org/wiki/Chebyshev_distance)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function chebyshev(a: NumberArray, b: NumberArray): number {\n  let max = 0;\n  let aux = 0;\n  for (let i = 0; i < a.length; i++) {\n    aux = Math.abs(a[i] - b[i]);\n    if (max < aux) {\n      max = aux;\n    }\n  }\n  return max;\n}\n"],"mappings":"AAEA;;;;;;;AAOA,eAAc,SAAUA,SAASA,CAACC,CAAc,EAAEC,CAAc;EAC9D,IAAIC,GAAG,GAAG,CAAC;EACX,IAAIC,GAAG,GAAG,CAAC;EACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACjCD,GAAG,GAAGG,IAAI,CAACC,GAAG,CAACP,CAAC,CAACI,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC,CAAC;IAC3B,IAAIF,GAAG,GAAGC,GAAG,EAAE;MACbD,GAAG,GAAGC,GAAG;;;EAGb,OAAOD,GAAG;AACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}