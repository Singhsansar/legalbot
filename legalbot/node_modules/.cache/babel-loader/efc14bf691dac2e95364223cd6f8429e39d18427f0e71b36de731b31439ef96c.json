{"ast":null,"code":"/**\n *Returns the Sorensen distance between vectors a and b\n * @link [Sorensen algorithm](https://en.wikipedia.org/wiki/S%C3%B8rensen%E2%80%93Dice_coefficient)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function sorensen(a, b) {\n  let up = 0;\n  let down = 0;\n  for (let i = 0; i < a.length; i++) {\n    up += Math.abs(a[i] - b[i]);\n    down += a[i] + b[i];\n  }\n  return up / down;\n}","map":{"version":3,"names":["sorensen","a","b","up","down","i","length","Math","abs"],"sources":["/home/nikhil/legalbot/legalbot/node_modules/ml-distance/src/distances/sorensen.ts"],"sourcesContent":["import { NumberArray } from 'cheminfo-types';\n\n/**\n *Returns the Sorensen distance between vectors a and b\n * @link [Sorensen algorithm](https://en.wikipedia.org/wiki/S%C3%B8rensen%E2%80%93Dice_coefficient)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function sorensen(a: NumberArray, b: NumberArray): number {\n  let up = 0;\n  let down = 0;\n  for (let i = 0; i < a.length; i++) {\n    up += Math.abs(a[i] - b[i]);\n    down += a[i] + b[i];\n  }\n  return up / down;\n}\n"],"mappings":"AAEA;;;;;;;AAOA,eAAc,SAAUA,QAAQA,CAACC,CAAc,EAAEC,CAAc;EAC7D,IAAIC,EAAE,GAAG,CAAC;EACV,IAAIC,IAAI,GAAG,CAAC;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACjCF,EAAE,IAAII,IAAI,CAACC,GAAG,CAACP,CAAC,CAACI,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC,CAAC;IAC3BD,IAAI,IAAIH,CAAC,CAACI,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC;;EAErB,OAAOF,EAAE,GAAGC,IAAI;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}