{"ast":null,"code":"/**\n *Returns the Czekanowski similarity between vectors a and b\n * @link [Czekanowski similarity](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function czekanowskiSimilarity(a, b) {\n  let up = 0;\n  let down = 0;\n  for (let i = 0; i < a.length; i++) {\n    up += Math.min(a[i], b[i]);\n    down += a[i] + b[i];\n  }\n  return 2 * up / down;\n}","map":{"version":3,"names":["czekanowskiSimilarity","a","b","up","down","i","length","Math","min"],"sources":["/home/nikhil/legalbot/legalbot/node_modules/ml-distance/src/similarities/czekanowski.ts"],"sourcesContent":["import { NumberArray } from 'cheminfo-types';\n/**\n *Returns the Czekanowski similarity between vectors a and b\n * @link [Czekanowski similarity](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function czekanowskiSimilarity(\n  a: NumberArray,\n  b: NumberArray,\n): number {\n  let up = 0;\n  let down = 0;\n  for (let i = 0; i < a.length; i++) {\n    up += Math.min(a[i], b[i]);\n    down += a[i] + b[i];\n  }\n  return (2 * up) / down;\n}\n"],"mappings":"AACA;;;;;;;AAOA,eAAc,SAAUA,qBAAqBA,CAC3CC,CAAc,EACdC,CAAc;EAEd,IAAIC,EAAE,GAAG,CAAC;EACV,IAAIC,IAAI,GAAG,CAAC;EACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACjCF,EAAE,IAAII,IAAI,CAACC,GAAG,CAACP,CAAC,CAACI,CAAC,CAAC,EAAEH,CAAC,CAACG,CAAC,CAAC,CAAC;IAC1BD,IAAI,IAAIH,CAAC,CAACI,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC;;EAErB,OAAQ,CAAC,GAAGF,EAAE,GAAIC,IAAI;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}