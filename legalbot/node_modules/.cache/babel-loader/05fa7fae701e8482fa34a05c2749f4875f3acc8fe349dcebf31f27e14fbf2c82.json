{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFetch = void 0;\nvar cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nvar getFetch = function (config) {\n  if (config.fetchApi) {\n    // User-provided fetch implementation, if any, takes precedence.\n    return config.fetchApi;\n  } else if (global.fetch) {\n    // If a fetch implementation is already present in the global\n    // scope, use that. This should prevent confusing failures in\n    // nextjs projects where @vercel/fetch is mandated and\n    // other implementations are stubbed out.\n    return global.fetch;\n  } else {\n    // Use ponyfill as last resort\n    return cross_fetch_1.default;\n  }\n};\nexports.getFetch = getFetch;","map":{"version":3,"names":["cross_fetch_1","__importDefault","require","getFetch","config","fetchApi","global","fetch","default","exports"],"sources":["../../src/utils/fetch.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;AAAA,IAAAA,aAAA,GAAAC,eAAA,CAAAC,OAAA;AAGO,IAAMC,QAAQ,GAAG,SAAAA,CAACC,MAA6B;EACpD,IAAIA,MAAM,CAACC,QAAQ,EAAE;IACnB;IACA,OAAOD,MAAM,CAACC,QAAQ;GACvB,MAAM,IAAIC,MAAM,CAACC,KAAK,EAAE;IACvB;IACA;IACA;IACA;IACA,OAAOD,MAAM,CAACC,KAAK;GACpB,MAAM;IACL;IACA,OAAOP,aAAA,CAAAQ,OAAU;;AAErB,CAAC;AAdYC,OAAA,CAAAN,QAAQ,GAAAA,QAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}