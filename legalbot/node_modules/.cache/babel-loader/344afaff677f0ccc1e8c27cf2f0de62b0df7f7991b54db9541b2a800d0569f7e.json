{"ast":null,"code":"/**\n *Returns the Jensen-Shannon distance between vectors a and b\n * @link [Jensen-Shannon algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function jensenShannon(a, b) {\n  let p = 0;\n  let q = 0;\n  for (let i = 0; i < a.length; i++) {\n    p += a[i] * Math.log(2 * a[i] / (a[i] + b[i]));\n    q += b[i] * Math.log(2 * b[i] / (a[i] + b[i]));\n  }\n  return (p + q) / 2;\n}","map":{"version":3,"names":["jensenShannon","a","b","p","q","i","length","Math","log"],"sources":["/home/nikhil/legalbot/legalbot/node_modules/ml-distance/src/distances/jensenShannon.ts"],"sourcesContent":["import { NumberArray } from 'cheminfo-types';\n/**\n *Returns the Jensen-Shannon distance between vectors a and b\n * @link [Jensen-Shannon algorithm](https://www.naun.org/main/NAUN/ijmmas/mmmas-49.pdf)\n * @param a - first vector\n * @param b - second vector\n *\n */\nexport default function jensenShannon(a: NumberArray, b: NumberArray): number {\n  let p = 0;\n  let q = 0;\n  for (let i = 0; i < a.length; i++) {\n    p += a[i] * Math.log((2 * a[i]) / (a[i] + b[i]));\n    q += b[i] * Math.log((2 * b[i]) / (a[i] + b[i]));\n  }\n  return (p + q) / 2;\n}\n"],"mappings":"AACA;;;;;;;AAOA,eAAc,SAAUA,aAAaA,CAACC,CAAc,EAAEC,CAAc;EAClE,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACjCF,CAAC,IAAIF,CAAC,CAACI,CAAC,CAAC,GAAGE,IAAI,CAACC,GAAG,CAAE,CAAC,GAAGP,CAAC,CAACI,CAAC,CAAC,IAAKJ,CAAC,CAACI,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC,CAAC,CAAC;IAChDD,CAAC,IAAIF,CAAC,CAACG,CAAC,CAAC,GAAGE,IAAI,CAACC,GAAG,CAAE,CAAC,GAAGN,CAAC,CAACG,CAAC,CAAC,IAAKJ,CAAC,CAACI,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC,CAAC,CAAC;;EAElD,OAAO,CAACF,CAAC,GAAGC,CAAC,IAAI,CAAC;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}