{"ast":null,"code":"import { getEnvironmentVariable } from \"@langchain/core/utils/env\";\nimport { OpenAI as OpenAIClient } from \"openai\";\nimport { Tool } from \"@langchain/core/tools\";\n/**\n * A tool for generating images with Open AIs Dall-E 2 or 3 API.\n */\nexport class DallEAPIWrapper extends Tool {\n  static lc_name() {\n    return \"DallEAPIWrapper\";\n  }\n  constructor(fields) {\n    super(fields);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"dalle_api_wrapper\"\n    });\n    Object.defineProperty(this, \"description\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"A wrapper around OpenAI DALL-E API. Useful for when you need to generate images from a text description. Input should be an image description.\"\n    });\n    Object.defineProperty(this, \"client\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"modelName\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"dall-e-3\"\n    });\n    Object.defineProperty(this, \"style\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"vivid\"\n    });\n    Object.defineProperty(this, \"quality\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"standard\"\n    });\n    Object.defineProperty(this, \"n\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, \"size\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"1024x1024\"\n    });\n    Object.defineProperty(this, \"responseFormat\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: \"url\"\n    });\n    Object.defineProperty(this, \"user\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    const openAIApiKey = fields?.openAIApiKey ?? getEnvironmentVariable(\"OPENAI_API_KEY\");\n    const organization = fields?.organization ?? getEnvironmentVariable(\"OPENAI_ORGANIZATION\");\n    const clientConfig = {\n      apiKey: openAIApiKey,\n      organization,\n      dangerouslyAllowBrowser: true\n    };\n    this.client = new OpenAIClient(clientConfig);\n    this.modelName = fields?.modelName ?? this.modelName;\n    this.style = fields?.style ?? this.style;\n    this.quality = fields?.quality ?? this.quality;\n    this.n = fields?.n ?? this.n;\n    this.size = fields?.size ?? this.size;\n    this.responseFormat = fields?.responseFormat ?? this.responseFormat;\n    this.user = fields?.user;\n  }\n  /** @ignore */\n  async _call(input) {\n    const response = await this.client.images.generate({\n      model: this.modelName,\n      prompt: input,\n      n: this.n,\n      size: this.size,\n      response_format: this.responseFormat,\n      style: this.style,\n      quality: this.quality,\n      user: this.user\n    });\n    let data = \"\";\n    if (this.responseFormat === \"url\") {\n      [data] = response.data.map(item => item.url).filter(url => url !== \"undefined\");\n    } else {\n      [data] = response.data.map(item => item.b64_json).filter(b64_json => b64_json !== \"undefined\");\n    }\n    return data;\n  }\n}\nObject.defineProperty(DallEAPIWrapper, \"toolName\", {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value: \"dalle_api_wrapper\"\n});","map":{"version":3,"names":["getEnvironmentVariable","OpenAI","OpenAIClient","Tool","DallEAPIWrapper","lc_name","constructor","fields","Object","defineProperty","enumerable","configurable","writable","value","openAIApiKey","organization","clientConfig","apiKey","dangerouslyAllowBrowser","client","modelName","style","quality","n","size","responseFormat","user","_call","input","response","images","generate","model","prompt","response_format","data","map","item","url","filter","b64_json"],"sources":["/home/nikhil/legalbot/legalbot/node_modules/@langchain/openai/dist/tools/dalle.js"],"sourcesContent":["import { getEnvironmentVariable } from \"@langchain/core/utils/env\";\nimport { OpenAI as OpenAIClient } from \"openai\";\nimport { Tool } from \"@langchain/core/tools\";\n/**\n * A tool for generating images with Open AIs Dall-E 2 or 3 API.\n */\nexport class DallEAPIWrapper extends Tool {\n    static lc_name() {\n        return \"DallEAPIWrapper\";\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"dalle_api_wrapper\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"A wrapper around OpenAI DALL-E API. Useful for when you need to generate images from a text description. Input should be an image description.\"\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"modelName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"dall-e-3\"\n        });\n        Object.defineProperty(this, \"style\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"vivid\"\n        });\n        Object.defineProperty(this, \"quality\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"standard\"\n        });\n        Object.defineProperty(this, \"n\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"size\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"1024x1024\"\n        });\n        Object.defineProperty(this, \"responseFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"url\"\n        });\n        Object.defineProperty(this, \"user\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const openAIApiKey = fields?.openAIApiKey ?? getEnvironmentVariable(\"OPENAI_API_KEY\");\n        const organization = fields?.organization ?? getEnvironmentVariable(\"OPENAI_ORGANIZATION\");\n        const clientConfig = {\n            apiKey: openAIApiKey,\n            organization,\n            dangerouslyAllowBrowser: true,\n        };\n        this.client = new OpenAIClient(clientConfig);\n        this.modelName = fields?.modelName ?? this.modelName;\n        this.style = fields?.style ?? this.style;\n        this.quality = fields?.quality ?? this.quality;\n        this.n = fields?.n ?? this.n;\n        this.size = fields?.size ?? this.size;\n        this.responseFormat = fields?.responseFormat ?? this.responseFormat;\n        this.user = fields?.user;\n    }\n    /** @ignore */\n    async _call(input) {\n        const response = await this.client.images.generate({\n            model: this.modelName,\n            prompt: input,\n            n: this.n,\n            size: this.size,\n            response_format: this.responseFormat,\n            style: this.style,\n            quality: this.quality,\n            user: this.user,\n        });\n        let data = \"\";\n        if (this.responseFormat === \"url\") {\n            [data] = response.data\n                .map((item) => item.url)\n                .filter((url) => url !== \"undefined\");\n        }\n        else {\n            [data] = response.data\n                .map((item) => item.b64_json)\n                .filter((b64_json) => b64_json !== \"undefined\");\n        }\n        return data;\n    }\n}\nObject.defineProperty(DallEAPIWrapper, \"toolName\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"dalle_api_wrapper\"\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}