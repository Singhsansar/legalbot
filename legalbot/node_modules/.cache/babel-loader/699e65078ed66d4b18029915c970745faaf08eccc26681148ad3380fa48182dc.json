{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.middleware = void 0;\nvar pinecone_generated_ts_fetch_1 = require(\"../pinecone-generated-ts-fetch\");\nvar errors_1 = require(\"../errors\");\nvar debugMiddleware = [];\nvar chalk = function (str, color) {\n  var colors = {\n    blue: '\\x1b[34m',\n    red: '\\x1b[31m',\n    green: '\\x1b[32m',\n    yellow: '\\x1b[33m'\n  };\n  return colors[color] + str + '\\x1b[39m';\n};\n/**\n * Enable the `PINECONE_DEBUG` environment variable to print the request and\n * response bodies for each request.\n *\n * Api-Key headers will be redacted.\n */\nif (typeof process !== 'undefined' && process && process.env && process.env.PINECONE_DEBUG) {\n  var debugLogMiddleware = {\n    pre: function (context) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var headers;\n        return __generator(this, function (_a) {\n          console.debug(chalk(\">>> Request: \".concat(context.init.method, \" \").concat(context.url), 'blue'));\n          headers = JSON.parse(JSON.stringify(context.init.headers));\n          headers['Api-Key'] = '***REDACTED***';\n          console.debug(chalk(\">>> Headers: \".concat(JSON.stringify(headers)), 'blue'));\n          if (context.init.body) {\n            console.debug(chalk(\">>> Body: \".concat(context.init.body), 'blue'));\n          }\n          console.debug('');\n          return [2 /*return*/];\n        });\n      });\n    },\n    post: function (context) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var _a, _b, _c, _d;\n        return __generator(this, function (_e) {\n          switch (_e.label) {\n            case 0:\n              console.debug(chalk(\"<<< Status: \".concat(context.response.status), 'green'));\n              _b = (_a = console).debug;\n              _c = chalk;\n              _d = \"<<< Body: \".concat;\n              return [4 /*yield*/, context.response.text()];\n            case 1:\n              _b.apply(_a, [_c.apply(void 0, [_d.apply(\"<<< Body: \", [_e.sent()]), 'green'])]);\n              console.debug('');\n              return [2 /*return*/];\n          }\n        });\n      });\n    }\n  };\n  debugMiddleware.push(debugLogMiddleware);\n}\n/**\n * Enable the `PINECONE_DEBUG_CURL` environment variable to print the equivalent\n * curl commands for each request. These commands will include the API key and\n * other sensitive information, so be careful when using this option.\n */\nif (typeof process !== 'undefined' && process && process.env && process.env.PINECONE_DEBUG_CURL) {\n  var debugCurlMiddleware = {\n    post: function (context) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var headers, cmd;\n        return __generator(this, function (_a) {\n          headers = \"-H \\\"Api-Key: \".concat((context.init.headers || {})['Api-Key'], \"\\\"\");\n          if (context.init.headers && context.init.headers['Content-Type']) {\n            headers += \" -H \\\"Content-Type: \".concat(context.init.headers['Content-Type'], \"\\\"\");\n          }\n          cmd = \"curl -X \".concat(context.init.method, \" \").concat(context.url, \" \").concat(headers, \" \").concat(context.init.body ? \"-d '\".concat(context.init.body, \"'\") : '');\n          console.debug(chalk(cmd, 'red'));\n          console.debug('');\n          return [2 /*return*/];\n        });\n      });\n    }\n  };\n  debugMiddleware.push(debugCurlMiddleware);\n}\nexports.middleware = __spreadArray(__spreadArray([], debugMiddleware, true), [{\n  onError: function (context) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var err;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, (0, errors_1.handleApiError)(context.error, undefined, context.url)];\n          case 1:\n            err = _a.sent();\n            throw err;\n        }\n      });\n    });\n  },\n  post: function (context) {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var response, err;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            response = context.response;\n            if (!(response.status >= 200 && response.status < 300)) return [3 /*break*/, 1];\n            return [2 /*return*/, response];\n          case 1:\n            return [4 /*yield*/, (0, errors_1.handleApiError)(new pinecone_generated_ts_fetch_1.ResponseError(response, 'Response returned an error'), undefined, context.url)];\n          case 2:\n            err = _a.sent();\n            throw err;\n        }\n      });\n    });\n  }\n}], false);","map":{"version":3,"names":["pinecone_generated_ts_fetch_1","require","errors_1","debugMiddleware","chalk","str","color","colors","blue","red","green","yellow","process","env","PINECONE_DEBUG","debugLogMiddleware","pre","context","__awaiter","console","debug","concat","init","method","url","headers","JSON","parse","stringify","body","post","response","status","_b","_a","_c","text","apply","_d","_e","sent","push","PINECONE_DEBUG_CURL","debugCurlMiddleware","cmd","exports","middleware","__spreadArray","onError","handleApiError","error","undefined","err","ResponseError"],"sources":["../../src/utils/middleware.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}